/** * Y.CheckLogin * 检查用户是否已经登录 * @author 虎牙 huya.nzb@taobao.com * @date 2011-12-16 * @version 1.0 */ YUI.add('check-login', function(Y) {    /**	 * 检查是否登录	 * @class CheckLogin	 * @for INS 保险YUI实例	 * @static	 */    Y.CheckLogin = {            /**         * 是否已经渲染         * @property rendered         * @type Boolean         * @public         */         rendered: true,                /**         * 是否已经登录         * @property isLogin         * @type Boolean         * @public         */        isLogin: false,                /**         * 登录回调数组         * @property callbackArray         * @type Array         * @public         */        callbackArray: [],                /**         * 域名         * @property domain         * @type String         * @public         */        domain: 'taobao.com',                /**         * 初始化         * @method init         * @public         */         init: function() {            var that = this;            that.render();        },                /**         * 渲染         * @method render         * @public         */         render: function() {            var that = this;            that.checkDomain();            that.rendered = true;        },                /**         * 检查设置域名         * @method checkDomain         * @public         */         checkDomain: function() {            var domain = this.domain,                hostname = location.hostname,                arr = hostname.split('.'),                len = arr.length;                            try {                if (len < 2) {                    domain = hostname;                } else {                    domain = arr[len - 2] + '.' + arr[len - 1];                }            } catch (err) {}                        document.domain = domain;                        if (domain == 'taobao.net') {                domain = 'daily.taobao.net';                this.domain = domain;            }        },                /**         * 检查是否已经登录         * @method check		 * @param {Function} callback 回调函数		 * @param {Object} context 回调上下文         * @public         */         check: function(callback, context) {                var that = this,                context = context || this,                timeStamp = +new Date();                        callback.context = context;            that.callbackArray.push(callback);                        //如果正在登录，则return，预防重复请求            if (that.miniLoginBox && that.miniLoginBox.get('visible')) {                return;            }            			//根据上次返回结果判断			//已废弃，有可能登录结果过期            /*if (that.isLogin) {                return that.afterLoginSucces(true);            }*/			Y.io('/login/isLogin.do', {				method: 'POST',				data: 't=' + timeStamp,				on: {					complete: function(id, r) {						try {							var rs = eval('(' + r.responseText + ')');							if (rs && rs.result) {								that.isLogin = true;								return that.afterLoginSucces(true);							}						} catch(err) {}												//unlogin						if (!that.miniLoginBox) {							that.renderMiniLoginBox();							that.bindMiniLoginBox();						}						if (that.miniLoginBox.get('visible')) {							return;						}						that.miniLoginBox.show();					}				}			});        },                /**         * 渲染迷你登录框         * @method renderMiniLoginBox         * @public         */        renderMiniLoginBox: function() {            var that = this,                domain = that.domain;                            that.miniLoginBox = new Y.Overlay({                zIndex: 99999,                width:'410px',                height:'270px',                visible: false,                headerContent: '<span class="close-box"></span>',                bodyContent: '<iframe frameborder=0 border=0 height="100%" width="100%" src="https://login.' + domain + '/member/login.jhtml?style=minisimple&full_redirect=false&redirect_url=http://baoxian.' + domain + '/login/loginsuccess.html"></iframe>',                centered: true            });            that.miniLoginBox.get('boundingBox').setAttribute('id', 'mini_login_box');            that.miniLoginBox.get('boundingBox').addClass('mini-loginbox');            that.miniLoginBox.render();        },        		/**         * 绑定迷你登录框事件         * @method bindMiniLoginBox         * @public         */        bindMiniLoginBox: function() {            var that = this;            that.miniLoginBox.get('contentBox').one('.close-box').on('click', function(e) {                e.halt();                that.miniLoginBox.hide();            });        },                /**         * 成功登录回调         * @method afterLoginSucces		 * @param {Boolean} isLogin 是否已经登录         * @public         */        afterLoginSucces: function(isLogin) {            var cb = null;            while (this.callbackArray.length) {                cb = this.callbackArray.shift();                cb.call(cb.context, isLogin);            }        }    };        /**	 * 全局登录处理函数	 * @method UserLoginSucces	 * @for INS 保险YUI实例	 * @static	 */    Y.UserLoginSucces = function() {        Y.CheckLogin.isLogin = true;        Y.CheckLogin.miniLoginBox && Y.CheckLogin.miniLoginBox.hide();        Y.CheckLogin.afterLoginSucces(true);    };        Y.CheckLogin.init();}, '1.0', {    requires: ['io', 'overlay']});